@model OnlineCarBikeRentalSystem.Models.ViewModel.BikeCarViewModel


@{
    ViewBag.Title = "AddOrEdit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script type="text/javascript">
    function showimagepreview1(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#smimg').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
    function showimagepreview2(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#lgimg').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>

<section class="content">
    <div class="container">
        <div class="row">
            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h2>@ViewBag.Action</h2>
                    </div>
                   
                    @using (Html.BeginForm("AddOrEdit", "BikeCar", FormMethod.Post, new { @enctype = "multipart/form-data", @onsubmit = "return SubmitForm(this)" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal" @*id="form" method="post" action="BikeCar/AddOrEdit"*@>
                            <h4>BikeCarViewModel</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.VehicleId)

                            <div class="form-group">
                                <label class="control-label col-md-2">Vendor Name</label>
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.VendorId, new SelectList(ViewBag.vendor, "VendorId", "VendorName"), "Select Vendor", new { @class = "form-control", id = "EmptyVendor" })
                                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Bike_CarName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Bike_CarName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Bike/car Name", id = "BikeCarName" } })
                                    @Html.ValidationMessageFor(model => model.Bike_CarName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EngieneCC, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EngieneCC, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter EngieneCC", id = "Engiene" } })
                                    @Html.ValidationMessageFor(model => model.EngieneCC, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PricePerHour, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PricePerHour, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Price/hr Rate", id = "PerHour" } })
                                    @Html.ValidationMessageFor(model => model.PricePerHour, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PricePerDay, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PricePerDay, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Price/Day Rate", id = "PerDay" } })
                                    @Html.ValidationMessageFor(model => model.PricePerDay, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.PricePerWeek, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PricePerWeek, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Price/Week Rate", id = "PerWeek" } })
                                    @Html.ValidationMessageFor(model => model.PricePerWeek, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PricePermonth, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PricePermonth, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Price/Month Rate", id = "PerMonth" } })
                                    @Html.ValidationMessageFor(model => model.PricePermonth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FuelUsed, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.DropDownListFor(model => model.VendorId, new SelectList(ViewBag.vendor, "VendorId", "VendorName"), "Select Vendor", new { @class = "form-control" })*@

                                    @Html.DropDownListFor(model => model.FuelUsed, new SelectList(ViewBag.fuel, "FType", "FType"), "Choose FuelType Used", new { @class = "form-control", id = "FuelUsed" })
                                    @*@Html.EditorFor(model => model.FuelUsed, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter FuelUsed" } })*@
                                    @Html.ValidationMessageFor(model => model.FuelUsed, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.SmallImage, htmlAttributes: new { @class = "control-label col-md-2" })
                                (Size 250*300)
                                <div class="col-md-10">
                                    <img id="smimg" src="/img/bikecar/@Model.SmallImage" height="100" width="90" />
                                    @Html.TextBoxFor(model => model.SmallImage, new { @Type = "file", @class = "form-control", @onchange = "showimagepreview1(this)", id = "SmallImage" })
                                    @Html.ValidationMessageFor(model => model.SmallImage, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LargeImage, htmlAttributes: new { @class = "control-label col-md-2" })
                                (Size 900*1024)
                                <div class="col-md-10">
                                    <img id="lgimg" src="/img/bikecar/@Model.LargeImage" height="100" width="90" />
                                    @Html.TextBoxFor(model => model.LargeImage, new { @Type = "file", @class = "form-control", @onchange = "showimagepreview2(this)", id = "LargeImage" })
                                    @Html.ValidationMessageFor(model => model.LargeImage, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalBike_Car, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TotalBike_Car, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Total Number of Bike/Car to be added in Stock", id = "Numberstock" } })
                                @Html.ValidationMessageFor(model => model.TotalBike_Car, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-primary" id="save" />
                                @Html.ActionLink("Back To List", "ManageBikeCar", null, new { @class = "btn btn-info" })
                                @if (ViewBag.Message != null)
                                {
                                    <script type="text/javascript">
                                        window.onload = function () {
                                            @*alert("@ViewBag.Message");*@
                                            sweetAlert("Saved!", "@ViewBag.Message", "success");
                                        };
                                    </script>

                                }
                            </div>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>
</section>

<link href="~/Content/sweet-alert.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/sweet-alert.js"></script>

<script>

        $('#save').click(function (e) {
            if ($('#EmptyVendor').val() === "") {
                sweetAlert("VendorName Shouldn't Be Empty!!", "Please select VendorName", "error");
                //alert("VendorName Shouldn't Be Empty!!");
                return false;
            }
            if ($('#BikeCarName').val() === "") {
                sweetAlert("Bike/Car Name Shouldn't Be Empty!!", "Please Enter Bike/Car Name", "error");
                return false;
            }
            if ($('#Engiene').val() === "") {
                sweetAlert("Engiene CC Shouldn't Be Empty!!", "Please Enter Bike/Car Engiene CC", "error");
                return false;
            }
            if ($('#PerHour').val() === "") {
                sweetAlert("Price/Hour Shouldn't Be Empty!!", "Please Enter Bike/Car Price per Hour", "error");
                return false;
            }
            if ($('#PerDay').val() === "") {
                sweetAlert("Price/Day Shouldn't Be Empty!!", "Please Enter Bike/Car Price per Day", "error");
                return false;
            }
            if ($('#PerWeek').val() === "") {
                sweetAlert("Price/Week Shouldn't Be Empty!!", "Please Enter Bike/Car Price per Week", "error");
                return false;
            }
            if ($('#PerMonth').val() === "") {
                sweetAlert("Price/Month Shouldn't Be Empty!!", "Please Enter Bike/Car Price per Month", "error");
                return false;
            }
            if ($('#FuelUsed').val() === "") {
                sweetAlert("Fuel Used Shouldn't Be Empty!!", "Please Choose FuelUsed from Dropdown", "error");
                return false;
            }
            if ($('#SmallImage').val() === "") {
                sweetAlert("Bike/Car Small Image Shouldn't Be Empty!!", "Please Choose Bike/Car Small Image from File", "error");
                return false;
            }
            if ($('#LargeImage').val() === "") {
                sweetAlert("Bike/Car Large Image Shouldn't Be Empty!!", "Please Choose Bike/Car Large Image from File", "error");
                return false;
            }
            if ($('#Numberstock').val() === "") {
                sweetAlert("Bike/Car Number of Stock Shouldn't Be Empty!!", "Please Enter No. of Bike/Car To be Added in Stock", "error");
                return false;
            }

        });

    </script>
